import { Response, Request, Router } from "express";
import { socketIO } from "../server";

import { Product, ProductDocument } from "../models/Product";

const router: Router = Router({ mergeParams: true });

const getProducts = (req: Request, res: Response) => {
  Product.find((err, allProducts) => {
    res.json(allProducts);
  });
};

const createProduct = async (req: Request, res: Response) => {
  const product = req.body as ProductDocument;
  const result = await Product.create(product);

  res.json(result);
};

const updateProduct = async (req: Request, res: Response) => {
  try {
    const session = await Product.startSession();
    await session.withTransaction(async () => {
      const product = await Product.findOne({
        _id: req.params.productId,
      }).session(session);

      product.quantity += req.body.delta;

      const updatedProduct = await product.save();

      await session.commitTransaction();
      session.endSession();

      const { name, _id } = updatedProduct;
      socketIO.emit("productUpdated", {
        name,
        _id,
        delta: req.body.delta,
      });
      res.json(updatedProduct);
    });
  } catch (e) {
    res.status(403).json(e);
  }
};

router.get("/", getProducts);
router.post("/", createProduct);
router.patch("/:productId", updateProduct);

export default router;
